esphome:
  name: esptoyv2
  friendly_name: ESPToy v2
  
  # add mac address onto end of name (if multiple esptoys are on network)
  #name_add_mac_suffix: true

esp8266:
#  board: esp01_1m
  board: esp12e

# Enable logging
logger:
  baud_rate: 0

ota:
 - platform: esphome
   password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ESPToy_v2"
    password: !secret api_password

captive_portal:
 
uart:
  tx_pin: 1
  rx_pin: 3
  baud_rate: 115200

  # this shows raw bytes in log (can be viewed in terminal over wifi)
  debug:
  
# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

  actions:
    - action: play_rtttl
      variables:
        song_str: string
      then:
        - rtttl.play:
            rtttl: !lambda 'return song_str;'


light:
# built in board LED (blue)
  - platform: status_led
    name: "Status LED"
    pin: 
      number: GPIO2
      inverted: true

# github says WS2812 [https://github.com/rayshobby/esptoy]
# schematic says WS2813
  - platform: neopixelbus
    type: GRB
    variant: WS2813
    pin: GPIO13
    num_leds: 1
    name: "NeoPixel Light"

# buzzer
output:
  - platform: esp8266_pwm
    pin: GPIO15
    id: rtttl_out

rtttl:
  output: rtttl_out
  on_finished_playback:
    - logger.log: 'Song ended!'


    
# push button
binary_sensor:
  - platform: gpio
    pin:
      number: 0
      mode:
        input: true
      inverted: true
    name: Push Button
    id: pushbutton01
    # debounce
    filters:
      - delayed_on_off: 100ms
    publish_initial_state: true

# Example configuration entry
sensor:
  - platform: adc
    pin: GPIO17
    name: "Brightness"
    update_interval: 10s
    
# play a song
button:
  - platform: template
    name: "Play song"
    on_press: 
      # need to learn strings in esphome instead of doing it this way...
      - rtttl.play: 'scale_up:d=32,o=5,b=100:c,c#,d#,e,f#,g#,a#,b'     
      #- rtttl.play: 'two_short:d=4,o=5,b=100:16e6,16e6'
      #- rtttl.play: 'long:d=1,o=5,b=100:e6'
      #- rtttl.play: 'siren:d=8,o=5,b=100:d,e,d,e,d,e,d,e'
      #- rtttl.play: 'scale_up:d=32,o=5,b=100:c,c#,d#,e,f#,g#,a#,b'
      #- rtttl.play: 'star_wars:d=16,o=5,b=100:4e,4e,4e,8c,p,g,4e,8c,p,g,4e,4p,4b,4b,4b,8c6,p,g,4d#,8c,p,g,4e,8p'
      #- rtttl.play: 'mission_imp:d=16,o=6,b=95:32d,32d#,32d,32d#,32d,32d#,32d,32d#,32d,32d,32d#,32e,32f,32f#,32g,g,8p,g,8p,a#,p,c7,p,g,8p,g,8p,f,p,f#,p,g,8p,g,8p,a#,p,c7,p,g,8p,g,8p,f,p,f#,p,a#,g,2d,32p,a#,g,2c#,32p,a#,g,2c,a#5,8c,2p,32p,a#5,g5,2f#,32p,a#5,g5,2f,32p,a#5,g5,2e,d#,8d'
      #- rtttl.play: 'mario:d=4,o=5,b=100:16e6,16e6,32p,8e6,16c6,8e6,8g6,8p,8g,8p,8c6,16p,8g,1'